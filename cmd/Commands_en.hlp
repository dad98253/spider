#
# please put your help in in alphabetical order
#
# a string search is done in the command field (case is ignored)
# and all commands matching the asked for command are printed out
#
# the order of the fields in each header is 
#   privilege, command, Description 
# if the command ends in a - then that line isn't printed, but any
# subsequent lines are
#
# Comment lines are indented before printing
#
=== 0^ANNOUNCE <text>^Send an announcement to LOCAL users only

=== 0^ANNOUNCE FULL <text>^Send an announcement cluster wide
This will send your announcement cluster wide

=== 5^ANNOUNCE SYSOP <text>^Send an announcement to Sysops only

=== 0^ANNOUNCE-
<text> is the text of the announcement you wish to broadcast 

=== 0^APROPOS <string>^Search help database for <string>
Search the help database for <string> (it isn't case sensitive), and print
the names of all the commands that may be relevant.

=== 0^BYE^Exit from the cluster
This will disconnect you from the cluster

=== 5^CONNECT <callsign>^Start a connection to another DX Cluster
Start a connection process that will culminate in a new connection to the
DX cluster <callsign>. This process creates a new 'client' process which will
use the script in /spider/connect/<callsign> to effect the 'chat' exchange
necessary to traverse the network(s) to logon to the cluster <callsign>.

=== 9^CATCH <node call> All|[<msgno> ...]^Mark a message as sent
=== 9^UNCATCH <node call> All|[msgno> ...]^Unmark a message as sent
When you send messages the fact that you have forwarded it to another node 
is remembered so that it isn't sent again. When you have a new partner
node and you add their callsign to your /spider/msg/forward.pl file, all
outstanding non-private messages will be forwarded to them. This may well
be ALL the non-private messages. You can prevent this by using these 
commmands:-

    catch GB7DJK all
    catch GB7DJK 300 301 302 303
	
and to undo what you have just done:-

	uncatch GB7DJK all
	uncatch GB7DJK 300 301 302 303

which will arrange for them to be forward candidates again.

=== 9^DEBUG^Set the cluster program into debug mode
Executing this command will only have an effect if you are running the cluster
in debug mode i.e.

	perl -d cluster.pl

It will interrupt the cluster just after the debug command has finished.
=== 0^DIRECTORY^List messages 
=== 0^DIRECTORY ALL^List all messages
=== 0^DIRECTORY OWN^List your own messages
=== 0^DIRECTORY NEW^List all new messages
=== 0^DIRECTORY TO <call>^List all messages to <call>
=== 0^DIRECTORY FROM <call>^List all messages from <call>
=== 0^DIRECTORY SUBJECT <string>^List all messages with <string> in subject
=== 0^DIRECTORY <nn>^List last <nn> messages
=== 0^DIRECTORY <from>-<to>^List messages <from> message <to> message 
List the messages in the messages directory.

If there is a 'p' one space after the message number then it is a 
personal message. If there is a '-' between the message number and the
'p' then this indicates that the message has been read.

You can use shell escape characters such as '*' and '?' in the <call>
fields.

You can combine some of the various directory commands together eg:-

   DIR TO G1TLH 5
or 
   DIR SUBJECT IOTA 200-250

You can abbreviate all the commands to one letter and use ak1a syntax:-

   DIR/T G1* 10
   DIR/S QSL 10-100 5

=== 5^DIRECTORY-^
Sysops can see all users' messages.

=== 8^DISCONNECT <call> [<call> ...]^Disconnect a user or cluster
Disconnect any <call> connected locally

=== 0^DX <freq> <callsign> <remarks>^Send a DX spot throughout the cluster
<freq> is compared against the available bands set up in the cluster.
see show/bands for more information.

=== 1^FORWARD/OPERNAME <call>^Send out information on this <call> to all clusters
This command sends out any information held in the user file which can 
be broadcast in PC41 protocol packets. This information is Name, QTH, Location
and Homenode. PC41s are only sent for the information that is available.
 
=== 0^HELP^The HELP Command
HELP is available for a number of commands. The syntax is:-

  HELP <cmd>
  
Where <cmd> is the name of the command you want help on.

All commands can be abbreviated, so SHOW/DX can be abbreviated
to SH/DX, ANNOUNCE can be shortened to AN and so on.

Look at the APROPOS <string> command which will search the help database
for the <string> you specify and give you a list of likely commands
to look at with HELP.

=== 0^KILL <msgno> [<msgno..]^Delete a message from the local system
Delete a message from the local system. You will only be able to delete messages
that you have originated or been sent (unless you are the sysop).

=== 5^KILL FULL <msgno> [<msgno..]^Delete a message from the whole cluster
Delete a message (usually a 'bulletin') from the whole cluster system. 

This uses the subject field, so any messages that have exactly the same subject
will be deleted. Beware!

=== 9^LOAD/ALIASES^Reload the command alias table
Reload the /spider/cmd/Aliases file after you have editted it. You will need to
do this if you change this file whilst the cluster is running in order for the
changes to take effect.

=== 9^LOAD/BANDS^Reload the band limits table
Reload the /spider/data/bands.pl file if you have changed it manually whilst
the cluster is running. 

=== 9^LOAD/CMD_CACHE^Reload the automatic command cache
Normally, if you change a command file in the cmd or local_cmd tree it will
automatially be picked up by the cluster program. Sometimes it can get confused
if you are doing a lot of moving commands about or delete a command in the 
local_cmd tree and want to use the normal one again. Execute this command to
reset everything back to the state it was just after a cluster restart.

=== 9^LOAD/MESSAGES^Reload the system messages file
If you change the /spider/perl/Messages file (usually whilst fiddling/writing new
commands) you can have them take effect during a cluster session by executing this
command. You need to do this if get something like :-

unknown message 'xxxx' in lang 'en'

=== 9^LOAD/PREFIXES^Reload the prefix table
Reload the /spider/data/prefix_data.pl file if you have changed it manually whilst
the cluster is running. 

=== 8^PC <call> <text>^Send text (eg PC Protocol) to <call>
Send some arbitrary text to a locally connected callsign. No processing is done on
the text. This command allows you to send PC Protocol to unstick things if problems
arise (messages get stuck etc). eg:-
   pc gb7djk PC33^GB7TLH^GB7DJK^400^
or 
   pc G1TLH Try doing that properly!!!

=== 1^PING <node>^Send a ping command to another cluster
This command is used to estimate the quality of the link to another cluster. 
The time returned is the length of time taken for a PC51 to go to another 
cluster and be returned.

=== 0^KILL <msgno> [<msgno> ...]^Remove or erase a message from the system
You can get rid of any message to or originating from your callsign using 
this command. You can remove more than one message at a time.

=== 5^KILL <from>-<to>^Remove a range of messages from the system
=== 5^KILL FROM <call>^Remove all messages from a callsign
=== 5^KILL TO <call>^Remove all messages to a callsign
=== 5^KILL FULL <msgno> [<msgno]^Remove a message from the entire cluster
Remove this message from the entire cluster system as well as your node.

=== 5^KILL^
As a sysop you can kill any message on the system.

=== 5^MERGE <node> [<no spots>/<no wwv>]^Ask for the latest spots and WWV 
MERGE allows you to bring your spot and wwv database up to date. By default
it will request the last 10 spots and 5 WWVs from the node you select. The 
node must be connected locally.

You can request any number of spots or wwv and although they will be appended
to your databases they will not duplicate any that have recently been added 
(the last 2 days for spots and last month for WWV data).

=== 8^PC <call> <text>^Send arbitrary text to a connected callsign
Send any text you like to the callsign requested. This is used mainly to send
PC protocol to connected nodes either for testing or to unstick things. 

You can also use in the same way as a talk command to a connected user but
without any processing, added of "from <blah> to <blah" or whatever.
 
=== 1^PING <node call>^Find out the delays an a circuit to another node
This command will enable sysops to determine the speed of an inter-cluster
node. 

Any visible cluster node can be PINGed.

=== 1^RCMD <node call> <cmd>^Send a command to another DX Cluster
This command allows you to send nearly any command to another DX Cluster
node that is connected to the system. 

Whether you get any output is dependant on a) whether the other system knows
that the node callsign of this cluster is in fact a node b) whether the
other system is allowing RCMDs from this node and c) whether you have
permission to send this command at all.

=== 0^READ^Read the next unread personal message addressed to you
=== 0^READ <msgno>^Read the specified message
You can read any messages that are sent as 'non-personal' and also any
message either sent by or sent to your callsign.

=== 5^READ-^
As a sysop you may read any message on the system

=== 0^REPLY^Reply to the last message that you have read
=== 0^REPLY <msgno>^Reply to the specified message
=== 0^REPLY PRIVATE <msgno>^Reply privately to the specified message
=== 0^REPLY RR <msgno>^Reply to the specified message with read receipt
You can reply to a message and the subject will automatically have
"Re:" inserted in front of it, if it isn't already present.

You can also use all the extra qualifiers such as RR, PRIVATE, 
NOPRIVATE that you can use with the SEND command (see SEND
for further details)

=== 0^SEND <call> [<call> ...]^Send a message to one or more callsigns
=== 0^SEND RR <call>^Send a message and ask for a read receipt
=== 0^SEND COPY <msgno> <call>^Send a copy of a  message to someone
=== 0^SEND PRIVATE <call>^Send a personal message
=== 0^SEND NOPRIVATE <call>^Send a message to all stations
All the SEND commands will create a message which will be sent either to
an individual callsign or to one of the 'bulletin' addresses. 

SEND <call> on its own acts as though you had typed SEND PRIVATE, that is
it will mark the message as personal and send it to the cluster node that
that callsign is connected to.

You can have more than one callsign in all of the SEND commands.

You can have multiple qualifiers so that you can have for example:-

  SEND RR COPY 123 PRIVATE G1TLH G0RDI

which should send a copy of message 123 to G1TLH and G0RDI and you will
receive a read receipt when they have read the message.

SB is an alias for SEND NOPRIVATE (or send a bulletin in BBS speak)
SP is an alias for SEND PRIVATE

=== 0^SET/ADDRESS <your address>^Record your postal address

=== 0^SET/ANNOUNCE^Allow announce messages to come out on your terminal
=== 0^UNSET/ANNOUNCE^Stop announce messages coming out on your terminal

=== 0^SET/BEEP^Add a beep to DX and other messages on your terminal
=== 0^UNSET/BEEP^Stop beeps for DX and other messages on your terminal

=== 9^SET/DEBUG <name>^Add a debug level to the debug set
=== 9^UNSET/DEBUG <name>^Remove a debug level from the debug set

=== 0^SET/DX^Allow DX messages to come out on your terminal
=== 0^UNSET/DX^Stop DX messages coming out on your terminal

=== 0^SET/HERE^Tell the system you are present at your terminal
=== 0^UNSET/HERE^Tell the system you are absent from your terminal

=== 0^SET/HOMENODE <node> ^Set your normal cluster callsign
Tell the cluster system where you normally connect to. Any Messages sent
to you will normally find their way there should you not be connected.
eg:-
  SET/HOMENODE gb7djk

=== 9^SET/ISOLATE^Isolate a node from the rest of the network
Connect a node to your system in such a way that you are a full protocol
member of its network and can see all spots on it, but nothing either leaks
out from it nor goes back into from the rest of the nodes connected to you.

You can potentially connect several nodes in this way.
 
=== 9^UNSET/ISOLATE^Stop Isolation of a node from the rest of the network
Remove isolation from a node - SET/ISOLATE

=== 0^SET/LANGUAGE <lang>^Set the language you want to use
You can select the language that you want the cluster to use. Currently
the languages available are en (english) and nl (dutch).

=== 0^SET/LOCATION <lat & long>^Set your latitude and longitude
=== 9^SET/SYS_LOCATION <lat & long>^Set your cluster latitude and longitude
In order to get accurate headings and such like you must tell the system
what your latitude and longitude is. If you have not yet done a SET/QRA
then this command will set your QRA locator for you. For example:-
  SET/LOCATION 52 22 N 0 57 E

=== 9^SET/LOCKOUT <call>^Stop a callsign connecting to the cluster
=== 9^UNSET/LOCKOUT <call>^Allow a callsign to connect to the cluster

=== 0^SET/NAME <your name>^Set your name
Tell the system what your name is eg:-
  SET/NAME Dirk

=== 9^SET/NODE <call> [<call>..]^Make the callsign an AK1A cluster
Tell the system that the call(s) are to be treated as AK1A cluster and
fed PC Protocol rather normal user commands.

=== 0^SET/PAGE <lines per page>^Set the lines per page
Tell the system how many lines you wish on a page when the number of line
of output from a command is more than this. The default is 20. Setting it
explicitly to 0 will disable paging. 
  SET/PAGE 30
  SET/PAGE 0
 
=== 9^SET/PRIVILEGE <n> <call> [<call..]^Set privilege level on a call
Set the privilege level on a callsign. The privilege levels that pertain
to commands are as default:-
  0 - normal user
  1 - allow remote nodes normal user RCMDs
  5 - various privileged commands (including shutdown, but not disc-
      connect), the normal level for another node.
  8 - more privileged commands (including disconnect)
  9 - local sysop privilege. DO NOT SET ANY REMOTE USER OR NODE TO THIS
      LEVEL.
If you are a sysop and you come in as a normal user on a remote connection
your privilege will automatically be set to 0.

=== 9^SET/PASSWORD <callsign> <string>^Set a users password
The password for a user can only be set by a full sysop. The string
can contain any characters but any spaces are removed (you can type in
spaces - but they won't appear in the password). You can see the
result with STAT/USER.
 
=== 0^SET/QRA <locator>^Set your QRA locator
=== 9^SET/SYS_QRA <locator>^Set your cluster QRA locator
Tell the system what your QRA (or Maidenhead) locator is. If you have not
done a SET/LOCATION then your latitude and longitude will be set roughly
correctly (assuming your locator is correct ;-). For example:-
  SET/QRA JO02LQ

=== 0^SET/QTH <your qth>^Set your QTH
Tell the system where you are. For example:-
  SET/QTH East Dereham, Norfolk

=== 0^SET/TALK^Allow TALK messages to come out on your terminal
=== 0^UNSET/TALK^Stop TALK messages coming out on your terminal

=== 0^SET/WWV^Allow WWV messages to come out on your terminal
=== 0^UNSET/WWV^Stop WWV messages coming out on your terminal

=== 0^SET/WX^Allow WX messages to come out on your terminal
=== 0^UNSET/WX^Stop WX messages coming out on your terminal

=== 0^SHOW/DX^Interrogate the spot database
If you just type SHOW/DX you will get the last so many spots
(sysop configurable, but usually 10).
   
In addition you can add any number of these commands in very nearly
any order to the basic SHOW/DX command, they are:-
   
on <band>       - eg 160m 20m 2m 23cm 6mm
on <region>     - eg hf vhf uhf shf      (see SHOW/BANDS)
   
<number>        - the number of spots you want
<from>-<to>     - <from> spot no <to> spot no in the selected list
   
<prefix>        - for a spotted callsign beginning with <prefix>
*<suffix>       - for a spotted callsign ending in <suffix>
*<string>*      - for a spotted callsign containing <string>
   
day <number>    - starting <number> days ago
day <from>-<to> - <from> days <to> days ago
   
info <text>     - any spots containing <text> in the info or remarks
   
by <call>       - any spots spotted by <call> (spotter <call> is the 
                  same).

qsl             - this automatically looks for any qsl info on the call
                  held in the spot database.

iota [<iota>]   - If the iota island number is missing it will look for
                  the string iota and anything which looks like an iota
                  island number. If you specify then it will look for  
                  that island.

qra [<locator>] - this will look for the specific locator if you specify
                  one or else anything that looks like a locator.
   
e.g. 
   
   SH/DX 9m0
   SH/DX on 20m info iota
   SH/DX 9a on vhf day 30
   SH/DX rf1p qsl
   SH/DX iota 
   SH/DX iota eu-064
   SH/DX qra jn86
  
=== 0^SHOW/DXCC <prefix>^Interrogate the spot database by country
This command takes the <prefix> (which can be a full or partial 
callsign if desired), looks up which internal country number it is
and then displays all the spots as per SH/DX for that country.
   
The options for SHOW/DX also apply to this command.   
e.g. 
   
   SH/DXCC G
   SH/DXCC W on 20m info iota

=== 0^SHOW/FILES [<filearea> [<string>]]^List the contents of a filearea
SHOW/FILES on its own will show you a list of the various fileareas
available on the system. To see the contents of a particular file
area type:-
   SH/FILES <filearea>
where <filearea> is the name of the filearea you want to see the 
contents of.

You can also use shell globbing characters like '*' and '?' in a
string to see a selection of files in a filearea eg:-
   SH/FILES bulletins arld*

See also TYPE - to see the contents of a file.

=== 0^SHOW/PREFIX <callsign>^Interrogate the prefix database 
This command takes the <callsign> (which can be a full or partial 
callsign or a prefix), looks up which internal country number 
it is and then displays all the relevant prefixes for that country
together with the internal country no, the CQ and ITU regions. 

See also SHOW/DXCC

=== 0^SHOW/PROGRAM^Show the locations of all the included program modules
Show the name and location where every program module was load from. This
is useful for checking where you think you have loaded a .pm file from. 

=== 0^SHOW/WWV^Show last 10 WWV broadcasts
=== 0^SHOW/WWV <n>^Show last <n> WWV broadcasts
Display the most recent WWV information that has been received by the system

=== 5^SHUTDOWN^Shutdown the cluster
Shutdown the cluster and disconnect all the users 

=== 5^STAT/CHANNEL [<callsign>]^Show the status of a channel on the cluster
Show the internal status of the channel object either for the channel that 
you are on or else for the callsign that you asked for.

Only the fields that are defined (in perl term) will be displayed.

=== 5^STAT/USER [<callsign>]^Show the full status of a user
Shows the full contents of a user record including all the secret flags
and stuff.

Only the fields that are defined (in perl term) will be displayed.

=== 0^SYSOP^Regain your privileges if you login remotely
The system automatically reduces your privilege level to that of a
normal user if you login in remotely. This command allows you to
regain your normal privilege level. It uses the normal system: five
numbers are returned that are indexes into the character array that is
your assigned password (see SET/PASSWORD). The indexes start from
zero.

You are expected to return a string which contains the characters
required in the correct order. You may intersperse those characters
with others to obscure your reply for any watchers. For example (and
these values are for explanation :-):

password = 012345678901234567890123456789
 > sysop
22 10 15 17 3
you type:-
aa2bbbb0ccc5ddd7xxx3n
or 2 0 5 7 3
or 20573

They will all match. If there is no password you will still be offered
numbers but nothing will happen when you input a string. Any match is
case sensitive.

=== 0^TALK <call> <text>^Send a text message to another station
=== 0^TALK <call> > <node> <text>^Send a text message to another station via a node
Send a short message to any other station that is visible on the cluster
system. You can send it to anyone you can see with a SHOW/CONFIGURATION 
command, they don't have to be connected locally.

The second form of TALK is used when other cluster nodes are connected
with restricted information. This usually means that they don't send 
the user information usually associated with logging on and off the cluster.

If you know that G3JNB is likely to be present on GB7TLH, but you can only
see GB7TLH in the SH/C list but with no users, then you would use the
second form of the talk message.

=== 0^TYPE <filearea>/<name>^Look at the contents of a file in one of the fileareas
Type out the contents of a file in a filearea. So, for example, in 
filearea 'bulletins' you want to look at file 'arld051' you would 
enter:-
   TYPE bulletins/arld051

See also SHOW/FILES to see what fileareas are available and a 
list of content.

=== 0^WHO^Show who is physically connected
This is a quick listing that shows which callsigns are connected and
what sort of connection they have

=== 0^WX <text>^Send a weather message to local users
=== 0^WX FULL <text>^Send a weather message to all cluster users
=== 5^WX SYSOP <text>^Send a weather message to other clusters only
Weather messages can sometimes be useful if you are experiencing an extreme
that may indicate enhanced conditions
